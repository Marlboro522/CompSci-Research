
@misc{josephSurveyDeepLearning2021,
	title = {A {Survey} of {Deep} {Learning} {Techniques} for {Dynamic} {Branch} {Prediction}},
	url = {http://arxiv.org/abs/2112.14911},
	doi = {10.48550/arXiv.2112.14911},
	abstract = {Branch prediction is an architectural feature that speeds up the execution of branch instruction on pipeline processors and reduces the cost of branching. Recent advancements of Deep Learning (DL) in the post Moore's Law era is accelerating areas of automated chip design, low-power computer architectures, and much more. Traditional computer architecture design and algorithms could benefit from dynamic predictors based on deep learning algorithms which learns from experience by optimizing its parameters on large number of data. In this survey paper, we focus on traditional branch prediction algorithms, analyzes its limitations, and presents a literature survey of how deep learning techniques can be applied to create dynamic branch predictors capable of predicting conditional branch instructions. Prior surveys in this field focus on dynamic branch prediction techniques based on neural network perceptrons. We plan to improve the survey based on latest research in DL and advanced Machine Learning (ML) based branch predictors.},
	urldate = {2024-09-14},
	publisher = {arXiv},
	author = {Joseph, Rinu},
	month = dec,
	year = {2021},
	note = {arXiv:2112.14911 [cs]},
	keywords = {Computer Science - Artificial Intelligence, Computer Science - Hardware Architecture, Computer Science - Machine Learning},
	annote = {Comment: Survey paper},
	file = {arXiv Fulltext PDF:/Users/ilu/Zotero/storage/U3ZRLCF7/Joseph - 2021 - A Survey of Deep Learning Techniques for Dynamic Branch Prediction.pdf:application/pdf;arXiv.org Snapshot:/Users/ilu/Zotero/storage/8IKAZ47W/2112.html:text/html},
}

@article{mittalSurveyTechniquesDynamic2019a,
	title = {A survey of techniques for dynamic branch prediction},
	volume = {31},
	copyright = {© 2018 John Wiley \& Sons, Ltd.},
	issn = {1532-0634},
	url = {https://onlinelibrary.wiley.com/doi/abs/10.1002/cpe.4666},
	doi = {10.1002/cpe.4666},
	abstract = {Branch predictor (BP) is an essential component in modern processors since high BP accuracy can improve performance and reduce energy by decreasing the number of instructions executed on wrong-path. However, reducing the latency and storage overhead of BP while maintaining high accuracy presents significant challenges. In this paper, we present a survey of dynamic branch prediction techniques. We classify the works based on key features to underscore their differences and similarities. We believe this paper will spark further research in this area and will be useful for computer architects, processor designers, and researchers.},
	language = {en},
	number = {1},
	urldate = {2024-09-14},
	journal = {Concurrency and Computation: Practice and Experience},
	author = {Mittal, Sparsh},
	year = {2019},
	note = {\_eprint: https://onlinelibrary.wiley.com/doi/pdf/10.1002/cpe.4666},
	keywords = {dynamic branch predictor, hybrid BP, neural BP, perceptron predictorside BP, pipelining, predictor accuracy, review, side BP, speculative execution, two-level BP},
	pages = {e4666},
	annote = {e4666 cpe.4666},
	file = {Full Text PDF:/Users/ilu/Zotero/storage/57CR6NUY/Mittal - 2019 - A survey of techniques for dynamic branch prediction.pdf:application/pdf},
}

@incollection{rodriguesPerformanceAnalysisBigLITTLE2021,
	address = {Singapore},
	title = {Performance {Analysis} of {Big}.{LITTLE} {System} with {Various} {Branch} {Prediction} {Schemes}},
	isbn = {9789811616815},
	url = {https://doi.org/10.1007/978-981-16-1681-5_5},
	abstract = {With the sprinting innovation in mobile technology, cell-phone processors, nowadays, are designed and deployed to meet the demands for high performance and low-power operation. ARM big.LITTLE architecture for smart phones meets the above requirements, with “big” cores delivering high performance and “little” cores being power efficient. High performance is achieved by making deeper pipelines, which result in more processing time being spent on a branch misprediction. Hence, an accurate branch predictor is required to mitigate branch delay latency in processors for exploiting parallelism. In this paper, we evaluate and compare various branch prediction schemes by incorporating them in ARM big.LITTLE architecture with Linux running on it. The comparison is carried out for performance and power utilization with Rodinia benchmarks for heterogeneous cores. Performance of the simulated system is in terms of execution time, percentage of conditional branch mispredictions, and overall percentage of branch mispredictions that considers the conditional and unconditional branches and instructions per cycles. It is observed that the TAGE-LSC, perceptron predictors perform better among all the simulated predictors achieving an average accuracy of 99.03\%, 99.00\%, respectively, using the gem5 framework. The local branch predictor has less power dissipation when tested on the integrated platform of multicore power area timing.},
	language = {en},
	urldate = {2024-09-14},
	booktitle = {Data {Science}: {Theory}, {Algorithms}, and {Applications}},
	publisher = {Springer},
	author = {Rodrigues, Froila V. and Guinde, Nitesh B.},
	editor = {Verma, Gyanendra K. and Soni, Badal and Bourennane, Salah and Ramos, Alexandre C. B.},
	year = {2021},
	doi = {10.1007/978-981-16-1681-5_5},
	pages = {59--72},
	file = {Full Text PDF:/Users/ilu/Zotero/storage/L7RXLQBT/Rodrigues and Guinde - 2021 - Performance Analysis of Big.LITTLE System with Various Branch Prediction Schemes.pdf:application/pdf},
}

@misc{penneySurveyMachineLearning2019,
	title = {A {Survey} of {Machine} {Learning} {Applied} to {Computer} {Architecture} {Design}},
	url = {http://arxiv.org/abs/1909.12373},
	doi = {10.48550/arXiv.1909.12373},
	abstract = {Machine learning has enabled significant benefits in diverse fields, but, with a few exceptions, has had limited impact on computer architecture. Recent work, however, has explored broader applicability for design, optimization, and simulation. Notably, machine learning based strategies often surpass prior state-of-the-art analytical, heuristic, and human-expert approaches. This paper reviews machine learning applied system-wide to simulation and run-time optimization, and in many individual components, including memory systems, branch predictors, networks-on-chip, and GPUs. The paper further analyzes current practice to highlight useful design strategies and identify areas for future work, based on optimized implementation strategies, opportune extensions to existing work, and ambitious long term possibilities. Taken together, these strategies and techniques present a promising future for increasingly automated architectural design.},
	urldate = {2024-09-14},
	publisher = {arXiv},
	author = {Penney, Drew D. and Chen, Lizhong},
	month = sep,
	year = {2019},
	note = {arXiv:1909.12373 [cs]},
	keywords = {Computer Science - Artificial Intelligence, Computer Science - Hardware Architecture, Computer Science - Machine Learning},
	file = {arXiv Fulltext PDF:/Users/ilu/Zotero/storage/9BJSWWH6/Penney and Chen - 2019 - A Survey of Machine Learning Applied to Computer Architecture Design.pdf:application/pdf;arXiv.org Snapshot:/Users/ilu/Zotero/storage/T34GQ7K2/1909.html:text/html},
}
